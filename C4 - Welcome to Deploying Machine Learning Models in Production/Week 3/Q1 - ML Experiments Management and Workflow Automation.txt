Total points 4
1.
Question 1
Is debugging in ML different from debugging in software engineering?

1 / 1 point

No, debugging in ML and software engineering aim for the same goals.


> Yes, debugging in ML is fundamentally different from debugging in software engineering.

Correct
Absolutely! ML debugging is often about a model not converging or not generalizing instead of some functional error like a segfault.

2.
Question 2
Which of the following tools allow you to track experiments with notebooks? (Select all that apply)

1 / 1 point

> Nbdime

Correct
Keep it up! This tool enables diffing and merging of Jupyter Notebooks.


> Nbconvert

Correct
Great job! Nbconvert can be used to extract just the Python from a notebook.


nbQA


> Jupytext

Correct
Youâ€™ve figured it out! Jupytext converts and synchronizes pairs of notebooks with a matching Python file.

3.
Question 3
Which of the following are some good tools for Data Versioning?

1 / 1 point

OpenRefine


> Delta Lake

Correct
You did it! Delta Lake runs on top of your existing data lake and provides data versioning, including rollbacks and full historical audit trails.


> Pachyderm

Correct
Way to go! This tool lets you continuously update data in the master branch while experimenting with specific data in a separate branch.


> Neptune

Correct
Nice job! Neptune includes data versioning, experiment tracking, and a model registry.

4.
Question 4
True Or False: Concerns such as cost, performance, stability, scalability, maintainability, and schedule are much more important to data scientists than software engineers.

1 / 1 point

> False


True

Correct
Yes! Software engineers identify themselves strongly with customer satisfaction and recognize infrastructure needs being as crucial as optimizing metrics. As a result, they strongly focus on quality, testing, and detecting and mitigating errors.